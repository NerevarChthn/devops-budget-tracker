# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Angular Build CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  angular-build-test:
    name: Angular Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install dependencies
        working-directory: budget-tracker-frontend
        run: npm ci

      - name: Run tests
        working-directory: budget-tracker-frontend
        run: npm run test:ci

      - name: Build
        working-directory: budget-tracker-frontend
        run: npm run build
  docker-build:
    name: Build Docker Container
    runs-on: ubuntu-latest
    needs: angular-build-test
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Build Docker Image
        working-directory: budget-tracker-frontend
        run: docker build -t budget-tracker-frontend .
  docker-export:
    name: Export Docker Image
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - name: Export Docker Image
        run: docker save budget-tracker-frontend | gzip > budget-tracker-frontend.tar.gz
      - name: Upload Docker Image as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: budget-tracker-frontend-image
          path: budget-tracker-frontend.tar.gz
  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: docker-export
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
  
      - name: Download Docker Image Artifact
        uses: actions/download-artifact@v4
        with:
          name: budget-tracker-frontend-image
      - name: Archiv entpacken
        run: tar -xzvf budget-tracker-frontend.tar.gz
      - name: Liste Verzeichnisinhalt auf
        run: ls -alh
      - name: Load Docker Image
        run: docker load -i budget-tracker-frontend
  
      - name: Extract Static Files from Docker Image
        run: |
          container_id=$(docker create budget-tracker-frontend)
          docker cp $container_id:/usr/share/nginx/html ./dist
          docker rm $container_id
  
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          publish_branch: gh-pages
          user_name: 'github-actions'
          user_email: 'github-actions@github.com'
